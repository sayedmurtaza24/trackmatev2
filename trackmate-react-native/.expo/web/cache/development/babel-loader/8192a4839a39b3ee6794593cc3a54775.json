{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nvar _ref = width < height ? [width, height] : [height, width],\n  _ref2 = _slicedToArray(_ref, 2),\n  shortDimension = _ref2[0],\n  longDimension = _ref2[1];\n\nvar guidelineBaseWidth = 350;\nvar guidelineBaseHeight = 680;\nexport var scale = function scale(size) {\n  return shortDimension / guidelineBaseWidth * size;\n};\nexport var verticalScale = function verticalScale(size) {\n  return longDimension / guidelineBaseHeight * size;\n};\nexport var moderateScale = function moderateScale(size) {\n  var factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;\n  return size + (scale(size) - size) * factor;\n};\nexport var moderateVerticalScale = function moderateVerticalScale(size) {\n  var factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.5;\n  return size + (verticalScale(size) - size) * factor;\n};\nexport var s = scale;\nexport var vs = verticalScale;\nexport var ms = moderateScale;\nexport var mvs = moderateVerticalScale;","map":{"version":3,"names":["Dimensions","get","width","height","shortDimension","longDimension","guidelineBaseWidth","guidelineBaseHeight","scale","size","verticalScale","moderateScale","factor","moderateVerticalScale","s","vs","ms","mvs"],"sources":["C:/Users/marti/Desktop/projects/trackmatev2/trackmate-react-native/node_modules/react-native-size-matters/lib/scaling-utils.js"],"sourcesContent":["import { Dimensions } from 'react-native';\n\nconst { width, height } = Dimensions.get('window');\nconst [shortDimension, longDimension] = width < height ? [width, height] : [height, width];\n\n//Default guideline sizes are based on standard ~5\" screen mobile device\nconst guidelineBaseWidth = 350;\nconst guidelineBaseHeight = 680;\n\nexport const scale = size => shortDimension / guidelineBaseWidth * size;\nexport const verticalScale = size => longDimension / guidelineBaseHeight * size;\nexport const moderateScale = (size, factor = 0.5) => size + (scale(size) - size) * factor;\nexport const moderateVerticalScale = (size, factor = 0.5) => size + (verticalScale(size) - size) * factor;\n\nexport const s = scale;\nexport const vs = verticalScale;\nexport const ms = moderateScale;\nexport const mvs = moderateVerticalScale;"],"mappings":";;AAEA,sBAA0BA,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC;EAA1CC,KAAK,mBAALA,KAAK;EAAEC,MAAM,mBAANA,MAAM;AACrB,WAAwCD,KAAK,GAAGC,MAAM,GAAG,CAACD,KAAK,EAAEC,MAAM,CAAC,GAAG,CAACA,MAAM,EAAED,KAAK,CAAC;EAAA;EAAnFE,cAAc;EAAEC,aAAa;;AAGpC,IAAMC,kBAAkB,GAAG,GAAG;AAC9B,IAAMC,mBAAmB,GAAG,GAAG;AAE/B,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAK,CAAGC,IAAI;EAAA,OAAIL,cAAc,GAAGE,kBAAkB,GAAGG,IAAI;AAAA;AACvE,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAGD,IAAI;EAAA,OAAIJ,aAAa,GAAGE,mBAAmB,GAAGE,IAAI;AAAA;AAC/E,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAa,CAAIF,IAAI;EAAA,IAAEG,MAAM,uEAAG,GAAG;EAAA,OAAKH,IAAI,GAAG,CAACD,KAAK,CAACC,IAAI,CAAC,GAAGA,IAAI,IAAIG,MAAM;AAAA;AACzF,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqB,CAAIJ,IAAI;EAAA,IAAEG,MAAM,uEAAG,GAAG;EAAA,OAAKH,IAAI,GAAG,CAACC,aAAa,CAACD,IAAI,CAAC,GAAGA,IAAI,IAAIG,MAAM;AAAA;AAEzG,OAAO,IAAME,CAAC,GAAGN,KAAK;AACtB,OAAO,IAAMO,EAAE,GAAGL,aAAa;AAC/B,OAAO,IAAMM,EAAE,GAAGL,aAAa;AAC/B,OAAO,IAAMM,GAAG,GAAGJ,qBAAqB"},"metadata":{},"sourceType":"module"}